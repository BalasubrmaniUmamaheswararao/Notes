What is Jenkins?
	-> Jenkins is an open source tool with plugin built for continuous integration purpose.
	-> The functionality of Jenkins is to keep a track of version control system and to initiate and monitor a build system if changes occur. 
	-> It monitors the whole process and provides reports and notifications to alert.
	-> find detect and close defects early in the SDLC software development lifecycle and encourage automated testing of builds
	
How is continuous integration achieved using Jenkins?
	-> All the developers commit their source code changes to the shared Git repository.
	-> Jenkins server checks the shared Git repository at specified intervals and detected changes are then taken into the build.
	-> The build results and test results are shared to the developers
	-> The built application is displayed on a test server like Selenium and automated tests are ran.
	-> The clean and tested build is deployed to the production server.	

What is DevOps and in which stage does Jenkins fit in?
	-> DevOps is a software development practice which blends software development (Dev) with the IT operations (Ops) making 
		the whole development lifecycle simpler and shorter by constantly delivering builds, fixes, updates, and features. 
	-> Jenkins plays a great role because it helps in this integration by automating the build, test and deployment process.	
	
What are the system requirements to install Jenkins?
	-> 256MB of RAM
	-> 1 GB of drive space
	-> Java
	-> Web browser	
	
What is Groovy?
	-> James Strachan is a software engineer who created the Apache Groovy programming language in 2003.
	-> Groovy from Apache is a language for Java platform. It is the native scripting language for Jenkins. 
	-> Groovy-based plugins enhance Jenkins with great interfaces and build reports.

Give a simple use case/scenario to explain how Jenkins works.
	1) Let us say a developer is working on some code changes and eventually commits them to the repository.
	2) Jenkins server, which constantly checks for changes in the repository, detects the change and pulls the changes to trigger a build.
	3) The build can fail, in which case the developer is informed with reports.
	4) If the build passes, it is deployed on to the test server.
	5) Once the testing is complete, a test report is generated and sent to the developers. 
			This process continues till all the tests are successful, after which code is deployed to production.

Can you start Jenkins using command line? How?
	-> Yes, using jenkins.exe start	

What is a job in Jenkins?
	-> A job or build job is a task or step in the entire build process. 
	-> It could be compiling the source code, running unit tests, deploying the application to the web server and so on.	
	
What is meant by Jenkins pipeline?
	-> A pipeline is a group of interlinked jobs done one after the other in a sequence. 
	-> To integrate and implement continuous delivery pipelines, Jenkins pipelines provides a combination of plugins. 
	-> The instructions to be performed are given through code.

What syntax does Jenkins use to schedule build job or SVN polling?
	Cron syntax is represented using five asterisks each separated by a space. 
	The syntax is as follows – [minutes] [hours] [day of the month] [month] [day of the week]. 
	Example, if you want to set up a cron for every Monday at 11.59 pm, it would be
	59 11 * * 1	
	
How does Jenkins authenticate users?
	-> The default way is to store user data and credentials in an internal database.
	-> Configure Jenkins to use the authentication mechanism defined by the application server on which it is deployed.
	-> Configure Jenkins to authenticate against LDAP server.	
  
What is Continous Intregation?
	-> In software development, when multiple developers or teams are working on different segments of same web application, 
		we need to perform integration test by integrating all modules.  In order to do that an automated process for each piece of 
		code is performed on daily bases so that all your code get tested.
		
 Do you know any other continuous integration tools? How is Jenkins better than any of those?
	-> TeamCity
	-> Bamboo
	-> Perforce
	-> Circle CI
	-> GoCD
	-> ThoughtWorks
	-> Integrity
	-> Travis CI		
		
3) What is the requirement for using Jenkins?
	-> A source code repository which is accessible, for instance, a Git repository
	-> A working build script, e.g., a Maven script, checked into the repository.
	
List some features of Jenkins?
	-> Free and open source
	-> Excellent community and documentation
	-> Exhaustive set of plugins and integrations
	-> Easy to set up, install and use on any platform because it is based on Java
	-> Supports distributed builds due to master-slave architecture, thus reducing the load on the CI server	
	
What are the various benefits of Jenkins?
	-> Free and open-source tool with wide community support.
	-> Easy to install and configure.
	-> Portable to all the major platforms as it is built on Java.
	-> Has many plugins for different tasks. If any plugin is not there, then developers can code it and contribute the same to the community.
	-> Highly customizable.
	-> Enables high-speed software development.	

Mention what are the advantages of Jenkins?
	-> At integration stage, build failures are cached.
	-> For each code commit changes an automatic build report notification generates.
	-> To notify developers about build report success or failure, it is integrated with LDAP mail server.
	-> Achieves continuous integration agile development and test driven development.
	-> With simple steps, maven release project is automated.
	-> Easy tracking of bugs at early stage in development environment than production.	
	
Explain how you can move or copy Jenkins from one server to another?
	-> Slide a job from one installation of Jenkins to another by copying the related job directory
	-> Make a copy of an already existing job by making clone of a job directory by a different name
	-> Renaming an existing job by renaming a directory.	
	
Mention what are the commands you can use to start Jenkins manually?
	To start Jenkins manually, you can use either of the following
		(Jenkins_url)/restart: Forces a restart without waiting for builds to complete.
		(Jenkin_url)/safeRestart: Allows all running builds to complete.

Mention some of the useful plugins in Jenkin?
			Maven 2 project
			Amazon EC2
			HTML publisher
			Copy artifact
			Join
			Docker
			K8S	

Explain how you can deploy a custom build of a core plugin?
		To deploy a custom field of a core plugin, you have to do following things
			Stop Jenkins
			Copy the custom HPI to $Jenkins_Home/plugins
			Delete the previously expanded plugin directory
			Make an empty file called <plugin>.hpi.pinned
			Start Jenkins	

Explain how can create a backup and copy files in Jenkins?
		Jenkins saves all the setting, build artifacts and logs in its home directory, to create a back-up of your Jenkins setup, just copy this directory. 
		You can also copy a job directory to clone or replicate a job or rename the directory.	

Explain how you can clone a Git repository via Jenkins?
		To clone a Git repository via Jenkins, you have to enter the e-mail and user name for your Jenkins system.  
		For that, you have to switch into your job directory and execute the “git config” command.		
		
Explain how you can set up Jenkins job?
		To create a project that is handled via jobs in Jenkins.  Select New item from the menu, 
		once this done enter a name for the job and select free-style job. Then click OK to create new job in Jenkins.  The next page enables you to configure your job.	

Mention what are the two components Jenkins is mainly integrated with?
		Jenkin is mainly integrated with two components
			Version Control system like GIT, SVN
			And build tools like Apache Maven.		
			
Explain the Difference between Jenkins and Bamboo?
			Jenkins											            Bamboo
		Open-source tool.							                  Commercial tool.
   Supported by a huge global community.		             Has its own dedicated development team.
   Less user-friendly compared to Bamboo.		                  More user-friendly features.
  Has many plugins to perform various functions.	Most features are built-in, and plugins are also available on the Atlassian marketplace.	


What is the process of Jenkins?
	-> Developers commit various source code changes to the Git repository.
	-> The Jenkins server keeps checking for repository changes and for every check-in, a build is done.
	-> Jenkins then deploys the built application to the test server (like Selenium). The test results are sent back as a feedback.
	-> Once all the tests are performed on the test server, the code is built on the production server.
	-> The feedback is again sent to the developer through the various levels (test server, Jenkins server, Git repo).  
	
Explain DSL Jenkins?
	-> Jenkins DSL (Domain Specific Language) is a plugin through which jobs can be defined in a programmatic manner which is human readable. 
			Through this plugin, the UI configurations are intuitively translated into code. That way, you can create a version for the job 
			and also maintain the history of the changes. The converted code is in a Groovy-based language.

Create a workflow for Continuous Delivery Workflow.
	-> To create a CD workflow, we have to first create a branch. All the coding, testing and code changes are done in the branch. 
		The branch changes are then merged and delivered once the testing is complete.	

Explain the difference between Continuous Integration, Continuous Delivery, and Continuous Deployment?
	-> Continuous integration: It is the process of constantly integrating the changes into the main software during all the stages of the delivery pipeline, 
			once the changes are tested on the test environment. CI can also be referred to as the work done by the Jenkins or Bamboo server.

	-> Continuous delivery: It is the delivery of code (shipping) to a particular environment like test, integration or production through a manual release.

	-> Continuous deployment: It is the automatic release of code into the staging or production environment, once the testing is done in the CI stage.		
	
	
What is Pipeline as a Code or Jenkinsfile in Jenkins? Explain various types of Pipeline?
	Pipeline-as-a-code is a technique or set of features that help you maintain the CI/CD workflow logic in the source code repository without any additional configurations 
				for each Jenkins branch. This is applicable for projects that have a file named as Jenkinsfile in the root folder of the repo (containing a pipeline script). 
				The types of pipeline syntax are declarative and syntax.
						-> Declarative: These provide an easy way for creating pipelines and has a predefined hierarchy to create Jenkins pipelines. 
							You can control all the aspects of the Pipeline.
						-> Scripted: It runs on the Jenkins master through a lightweight executor and uses few resources for translating the Pipeline into code (commands).

What is an agent?
	-> The agent specifies the execution point for a particular stage in the pipeline or the entire pipeline itself.

What is Agent Directive in Jenkins?
	-> The agent directive directs Jenkins on how and where to execute the Pipeline or its subsets. 
	-> All the pipelines require agents. 
	-> The agent causes a workspace to be allocated that contains checkout files from source control and other additional working files required for the Pipeline. 
	-> It also causes the steps required for execution to be executed by Jenkins when an executor is available.
	

Explain the difference between Maven, Ant, and Jenkins?
	-> Jenkins is a CI tool, whereas Ant and Maven are build tools. Jenkins provides a trigger for the build to be executed. 
	-> Maven and Ant can only perform build operations; however, Jenkins can run unit tests, deploy applications automatically.
	-> Between Ant and Maven, Ant is just a tool and is procedural, whereas Maven is a complete declarative framework and has a lifecycle. 
	-> Ant scripts cannot be reused, but Maven plugins can be reused. Ant is an old tool used by legacy systems. Most new applications use Maven.	
	
	
 How to secure Jenkins?
	-> We can secure Jenkins and configure global security through the following:
			1) Deploy Jenkins.war file to the server and start it.
			2) From the homepage (through URL), click on Manage Jenkins.
			3) On this page, click on the ‘Setup Security’ button.
			4) Check the ‘Enable Security’ checkbox.
			5) It is a good practice to have your own database for security. Select this option in the ‘Security Realm’ and check the ‘Allow users to sign up’ checkbox.
			6) Fill the signup form. Once the signup is successful, you can log in with the new account.
			7) Next, go to Manage Jenkins and ‘Configure Global Security’. Now, uncheck the ‘Allow users to sign up’ checkbox. 
				This way, no new users can be created without permission.
			8) Now, you can configure the account authentication. There are two strategies: Matrix-based security&Project-based project authorization strategy. 
				You can select the one which is suitable for you.
			9) Save the form and logout and then login with the new account.

How do you define parameters in Jenkins?
	-> A build can take several input parameters to execute. For example, if you have multiple test suites, but you want to run only one. 
	-> You can set a parameter to decide which one should be run. To have parameters in a job, you need to specify the same while defining the parameter. 
	-> The parameter can be a string, file or custom.	

What are the ways to configure Jenkins node agent to communicate with Jenkins master?
	-> There are 2 ways to start the node agent –
			Browser – if Jenkins node agent is launched from a browser, a JNLP (Java Web Start) file is downloaded. 
						This file launches a new process on the client machine to run jobs.
			Command line – to start the node agent using the command line, the client needs the executable agent.jar file. 
							When this file is run, it launches a process on the client to communicate with the Jenkins master to run build jobs.	
			
What is a trigger? Give an example of how the repository is polled when a new commit is detected.
	-> Triggers define when and how pipelines should be executed.
			When Jenkins is integrated with an SCM, for example, Git, the repository can be polled every time there is a commit.
			-> The Git plugin should be first installed and set up.
			->	After that, you can build a trigger that specifies when a new build should be started. 
					For example, you can create a job that polls the repository and triggers a build when a change is committed.

What is the use of JENKINS_HOME directory?
	-> All the settings, logs and configurations are stored in the JENKINS_HOME directory.
	
What is a backup plugin? Why is it used?
	-> This is a useful plugin that backs up all the critical settings and configurations to be used in the future. 
	-> This is especially useful when there is a failure so that we don’t lose the settings.	
	
Let us say, you have a pipeline. The first job was successful, but the second failed. What should you do next?
	-> You can restart the pipeline from the point where it failed by doing ‘restart from stage’.

Have you run automated tests on Jenkins? How is it done?
	-> Yes. Automated tests can be run through tools like Selenium or maven. Developers can schedule the test runs. 
			Jenkins displays the test results and sends a report to the developers.	
			
What is Kubernetes? How can you integrate Jenkins with Kubernetes?
	-> Kubernetes is a container orchestration tool. With Kubernetes, one can create multiple container instances to achieve more fault tolerance. 
		You can use the Kubernetes deploy plugin to use it with Jenkins for continuous deploy.	

Do you know about cloud computing? How can Jenkins fit into a cloud computing environment? Explain with an example.
	-> Let us take the example of AWS cloud service. 
			Cloud computing services use the CI/CD model so that they can push their work to the customers and constantly receive feedback. 
			Jenkins is used to automating the CI/CD pipelines. 
			For example, a lot of Jenkins plugins are available for many of the AWS services like Amazon EC2 and ECS.		
					