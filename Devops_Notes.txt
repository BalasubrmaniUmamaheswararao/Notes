Step to step to learn Devops:
	1) Why devops and cloud
	2) Find keywords are Agile, Quality, Scale of infructure( means Design Pattern), Caching, Case study(ex: Netfix cs),***vertical and Horzontolization scaling,
			CDN(means networking) and available.
	3) Linux
	4) Basics of BASH/Python (functional and OOPS concept)
	5) Common Infra Server like ***DNS, HTTP, SSL, Web server like Apache, nginx, IIS.,Reverse proxy ex: nginx, Load Balance like ***Layer4,***Layer7
	6) 	CI --> GIT, Jenkins
	7) Configuration management- what?, and tools like ansiable, chef and puppet
	8) virtualization -> type of virtualization, Docker
	9) Monitoringand logging-> Linux for logging and Nagios for Monitoring.	


Devops tools***:
	Linux
	GIT
	Jenkins
	Ansible/ Puppet/ Chef/
	Docker
	K8S
	AWS
		
		
Devops Modules:
	Devops Overview
	Version Control Using Git and GIt hub
	CI using Jenkins
	Containerization using Docker
	Kubernetes 

Devops principles:
	1) End to End Responsibilty
	2) Continous improvement
	3) Automate every thing
	4) Custom centric action to the custom
	5) monitor and test
	6) work as a team
	
Devops Road Map:
	Python scripting --> Linux admin --> setup the machine --> configuration management --> CI/CD tools --> Monitoring software --> Cloud
	

Devops Life cycle:
		1) Continous development - GIT
			Involves planning and coding of the software.
			Uses version control tools like GIT, SVN, build tool like maven ect

	--> 2) Continuous Testing - Selenium, TestNG, Junit
			Developer software is continous testing for bugs.
			Tools are Selenium, TestNG, Junit etc as automationed tools
			It saves times
			Selenium is used to testing the application in software and TestNG has report of the testing process.
			Use docker for the test mobule to separate

	--> 3) Continuous Integration - Jenkins
			It is heart of the entire devops lifecycle
			ex: Developer will commit the code frequently so that the tool should have to build the code continous with a new functionaly changes
			So, this stage is used in the devops and tool is Jenkins
			
	--> 4) Continuous Deployment - Docker, puppet, chef, and ansible
			The code is deploy in the produnction server.
			Two sections are
				a) Configuration manager
						It is a active releasing and deployment to server and schudle the update in all servers for continous deploymentin the server.
						The tools are puppet, chef, and ansible.
				b) Containerization tools
						It is to scaling up and scaling download
						tool are docket
						
	--> 5) Continous monitoring - Splunk, Nagios
			It is to continously monitor the application.
			System error can br resolved in the stage/phase.
			Tools are  Splunk, Nagios etc
	
Devops work flow:
	a) Sequential Job Execution
	b) Fan in/out in repo
	c) Branch level filering
	d) Parallel job execution

Devops in Amazon
	First, Devops used by amazon, hp, netflix, adode etc
	NOW, Amazon is uses
		1) GIT
		2) AWS - deployment
		3) Apollo - internal deployment tool 
		4) Practices in configuration manager and infructure as code 
		5) Monitor	
			
Skills to learn Deveops are
	1) Linux fundamental
	2) Source code management - GIT	
	3) CI-CD  - Docker amd Jenkins
	4) Infrastructure as code is a management of the infrastruction  a description model, using the same version as the same in source code.
						- Ansible, chef and Terraform.
	5) Knowledge of the automatic tool - Docker, Puppet and Jenkins	
	6) Continous Testing - Selenium
	7) Containerization - Docker
	8) Cloud - AWS, GC and azure.
	9) Security skills - DevSecOps
	10) Continuous Monitor - Nagios( open surce), sensu (Open  source) and new relic( work in java) 	
		
Devops Overview:
	1) Why Devops?
		Before Devops water fall methodology is used?
			water fall means when one process is over then, it will not come back. the stages of waterfall is requirement->Design->implement->test-deploy->maintaince
		Before Devops Agile methodology is used?	
			Agile means each project will divide into many sprint to work. Sprint will have discover stage, design stage and develop stage. 
				For sprint, working product should be divered. Agile is good in dev side but drawback on the operation side for production.
		Solution is Devops
			It is act as bridge between the dev side and operation side so, Devops is a methodology to study of building, evolving and rapidly changing systems at scale.
			
			There are three gap will occurs in Devs and ops team,
				1) incentives gap - due to different goals in development and opertions team.
				2) The process gap - due to difference in research between development and operation team
				3) The tools gap - due to separate tool used by both teams,
				so that, devops came which is Agile + opertation side and it follows CAMS (Culture + Automation + Measurement + Sharing )
				
	2) What is Develops?
		It is act as bridge between the dev side and operation side so, Devops is a methodology to study of building, evolving and rapidly changing systems at scale.
		It is combination dev + ops
		Increase the speed in delivery of the application.
		Single team will work on the devops and its promotes collaboration 
				

	2) Devops stages
	
		 a) Source Code Management = GIT
				1) Version control - maintain different versions of the code.
				2) Two type of Version Control
					are Centralized VCS 
								It has central server, will talk with single repository and gets code from the all local sytem which is commited.
					and Distributed VCS
								It has central server and single main repository but it will has many local repository and gets code from the all local sytem which is commited.
								
				GIT:
					It is a distributed version control tool which supports distributed non linear workflow which  provides data assurnace for divery the good software.
					The steps are Working Dir -git add->Stage area-git commit->Local resp-git push->Remote resp	
								  Remote resp-git pull->Local resp-git checkout/git merge->Working Dir
					WOrking on GIT:
							 1) git init  -- initallised the git from the repo folder - . It will created in the working dir. 
							 2) git statu -- add <file> -- it is add the file in the stageing area.
							 3) and see the status of the stage area by giving
							 4) git commit- it will push the file from stageing area to the local repository( head ).
							 5) git remote add origin "git hub link" - is to join the local rep( head ) to remote rep
							 6) git pull origin <branch-name> - pull from the remote rep to the local rep( head )
							 7) git push origin <branch-name>  - push from local rep( head ) to remote resp
							 8) git config -- configure the username and email address
							 9) git diff -- view the changes made in the file.
							10) git clone -- it is used clone the code from the remote to the local repository( head ).
							11) git log   -- log status of the local repostory( head ).
							12) git branch -- to cheak what branch and create a new branch ex: git branch <branch-name>
							13) git rebase -- It is speical kind of merge and same like merge but commit workflow will be different.
												which will merge the code and will automatically add the change code in local repository
							14) git mergetool -- It will shows UI screen of chage in the code.
							15) git revert -- it is used to revert a commit  file in the public mode.
							16) git stash -- it is used to store the change files in the branch without showing any changes in the reository using git status
							17) git stash pop -- ater that git stash, when this command, will get back the changed file in that branch and indicated in the repostories using git status.
							18) git diff-tree -r {commit id} -- used to list out the files in the particular commit and -r means command to list individual files.
				
							
						Advantage of GIT:
							1) It is good in faster release cycles
							2) It will make easy team collaboration
							3) maintance the integrity source code.
							
						What language in GIT?
							C language
							
						Name some of the popular GIT hosting repostories?
							GITHUB
							Gitlab
							BitBucket
							Buddy
							Beanstalk
							
						what is D/W git fetch and git pull?
							git fetch - Its download only new data from a remote repository.
							git pull  - It will pull update the currect HEAD branch with the latest changes from the remote server.
							
							git fetch -It does not integrate with any new data into your working files.
							git pull  - Download new data and integrate with the local working files.
							
							git fetch - can be done any time to update the remote tracking branch 
							git pull  -Tries to merge remote changes with local ones.
							
							git fetch - git fetch origin / git fetch -all
							git pull  - git pull origin master
							
							git fetch - it will fetch the new data file from remote to the local repository( head ). to working space, use git merge
							git pull  - it will fetch the new data file from remote to the local repository( head ) and automatically change in the working dir 
											with out using git merge
											
						what is merge conflict and how to resoleved in GIT?
							Merge conflict means if in the team, one employee and another employee has changed same files in many times to thr same line of code.
							Error tells to another employee is that, you didn't pull the file before.
							To resolve it, the error will occue while using git push, so that use git rebase which will merge the code and will automatically add the change code	
							
						what is git stash?
							Git has a area which has temporarity store the snapshot of the code without commiting and it is in working directory, the staging area or the local repository
							git stash -- it is used to store the change files in the branch without showing any changes in the reository using git status
							git stash pop -- ater that git stash, when this command, will get back the changed file in that branch and indicated in the repostories using git status.
							
							 
							 
		 b) Continuous Build = Jenkin
			Continous Integration - to build, complie, validate, junit, Integrationtesting cycle in it.
			
			Flow of the Contious Integration are
				From Version control --> Continous Build( jenkins server) --> Build --> Continous delivery
				In build, Complie-->code review --> Unit testing --> Integration testing --> package(war or jar file)
				
		 c) Continuous Testing
			COntinous Delivery - to deploy the build application in the test server. 
			After build, it will go to the continous delivery of the build application on the test server.
			
		 d) Configuration management and containerization
			Continous Deployment - At last, to deploy the tested application in the production serve.
			After continous delivery, the application will deployed in the production server for continous deployment
			
			Configuration management
				1) It is the practice of handling changes systematically so that a systems maintains its  integrity over time
				2) CM ensures that current design and build state of the system is known, good and trusted.
				3) CM will not reply on the tacit knowledge of the development team.
				4) Tools for CM is puppet which is used to deploying, configuring and managing the servers

					Puppet:
						Fuctions of Puppet:
							1) Distinct configuration
							2) Dynamic scaling
			
			Containerization
				1) It is light weight next of the VM's.
				2) Ex: Docker
				
		 e) Continuous Monitor 
			It is used to monitor other stages in devops, the tools are Nagios and Splunk
			Continous monitor is all about the ability of the organization to detect, report, respond, contain and mitigate the attacks that occur, in its infructure
			
	3) Devops tools
	4) Devops use-case
			